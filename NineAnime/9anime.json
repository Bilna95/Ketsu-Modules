{
    "moduleInfo": {
        "moduleName": "9Anime",
        "moduleInitials": "NA",
        "moduleDesc": "Watch anime with the module of 9Anime.",
        "developer": "ナビル",
        "moduleID": "CC3Gg83tsjm",
        "moduleImage": "https://i.postimg.cc/V6KWhqVc/9anime.png",
        "moduleVersion": 2.17,
        "changelog": "2.17 - Added Mcloud resolver - The module will only work on the ipa.",
        "moduleLenguage": "ENG",
        "moduleType": "Video",
        "baseURL": "https://9anime.id/",
        "moduleDeveloperSite": "https://mprotmod.github.io/Modules-KETSU/index.html",
        "UpdateSite": "https://raw.githubusercontent.com/Bilnaa/bilnaa.github.io/main/NineAnime/9anime.json",
        "preferedServer": "STREAMTAPE",
        "preferedDownloadServer": "STREAMTAPE",
        "blackListed": [""],
        "moduleCreatorIdStjHmJXaZpdURFoSjYEI": {
            "path": "HYZjb",
            "id": "moduleInfosection",
            "sectionsHidden": [],
            "options": {
                "name": "Module Info",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdejuDeojPyKfsVBUJhwDo": {
            "path": "hIDja",
            "id": "moduleInfocell",
            "sectionsHidden": [],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        }
    },
    "global": {
        "variables": [{
            "key": "",
            "value": ""
        }],
        "cookies": [{
            "key": "",
            "value": ""
        }],
        "headers": [{
            "key": "",
            "value": ""
        }]
    },
    "mainPage": [{
        "request": {
            "url": "https://9anime.gs/home",
            "method": "get",
            "headers": [{
                "key": "Referer",
                "value": "https://9anime.id",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": true,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */    const DefaultLayouts = {\n        ultraWideFull: 'ultraWideFull',\n        ultraWide: 'ultraWide',\n        wideFull: 'wideFull',\n        wide: 'wide',\n        wideStrechedFull: 'wideStrechedFull',\n        wideStrechedFullDouble: 'WideStrechedFullDouble',\n        wideStreched: 'wideStreched',\n        wideStrechedDouble: 'wideStrechedDouble',\n        wideStrechedFullList: 'wideStrechedFullList',\n        wideStrechedList: 'wideStrechedList',\n        doublets: 'doublets',\n        doubletsDouble: 'doubletsDouble',\n        doubletsFull: 'doubletsFull',\n        doubletsFullDouble: 'doubletsFullDouble',\n        doubletsConstant: 'doubletsConstant',\n        doubletsDoubleConstant: 'doubletsDoubleConstant',\n        doubletsFullConstant: 'doubletsFullConstant',\n        doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',\n        longDoublets: 'longDoublets',\n        longDoubletsDouble: 'longDoubletsDouble',\n        longDoubletsFull: 'longDoubletsFull',\n        longDoubletsFullDouble: 'longDoubletsFullDouble',\n        longDoubletsConstant: 'longDoubletsConstant',\n        longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',\n        longDoubletsFullConstant: 'longDoubletsFullConstant',\n        longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',\n        triplets: 'triplets',\n        tripletsDouble: 'tripletsDouble',\n        tripletsFull: 'tripletsFull',\n        tripletsFullDouble: 'tripletsFullDouble',\n        tripletsConstant: 'tripletsConstant',\n        tripletsDoubleConstant: 'tripletsDoubleConstant',\n        tripletsFullConstant: 'tripletsFullConstant',\n        tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',\n        longTriplets: 'longTriplets',\n        longTripletsDouble: 'longTripletsDouble',\n        longTripletsFull: 'longTripletsFull',\n        longTripletsFullDouble: 'longTripletsFullDouble',\n        longTripletsConstant: 'longTripletsConstant',\n        longTripletsDoubleConstant: 'longTripletsDoubleConstant',\n        longTripletsFullConstant: 'longTripletsFullConstant',\n        longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',\n        none: ''\n};\nconst CellDesings = {\n        Special1: 'Special1',\n        Special2: 'Special2',\n        Special3: 'Special3',\n        CELLHelperText: 'CELLHelperText',\n        small1: 'small1',\n        small2: 'small2',\n        normal1: 'normal1',\n        normal2: 'normal2',\n        normal3: 'normal3',\n        normal4: 'normal4',\n        normal5: 'normal5',\n        normal6: 'normal6',\n        normal7: 'normal7',\n        wide1: 'wide1',\n        wide2: 'wide2',\n        wide3: 'wide3',\n        wide4: 'wide4',\n        wide5: 'wide5',\n        wide6: 'wide6',\n        wide7: 'wide7',\n        wide8: 'wide8',\n        wide9: 'wide9',\n        wide10: 'wide10',\n        wide11: 'wide11'\n};\nconst Paging = {\n        leading: 'leading',\n        centered: 'centered',\n        none: ''\n};\nconst Orientation = {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n};\n\nfunction MainPage ( request, extra, javascriptConfig, output ) {\n        this.request = request;\n        this.extra = extra;\n        this.javascriptConfig = javascriptConfig;\n        this.output = output;\n}\n\nfunction ModuleRequest ( url, method, headers, httpBody ) {\n        this.url = url;\n        this.method = method;\n        this.headers = headers;\n        this.httpBody = httpBody;\n}\n\nfunction Extra ( commands, extraInfo ) {\n        this.commands = commands;\n        this.extraInfo = extraInfo;\n}\n\nfunction Commands ( commandName, params ) {\n        this.commandName = commandName;\n        this.params = params;\n}\n\nfunction JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n        this.removeJavascript = removeJavascript;\n        this.loadInWebView = loadInWebView;\n        this.javaScript = javaScript;\n}\n\nfunction KeyValue ( key, value ) {\n        this.key = key;\n        this.value = value;\n}\n\nfunction Output ( cellDesing, orientation, defaultLayout, paging, section, layout, data ) {\n        this.cellDesing = cellDesing;\n        this.orientation = orientation;\n        this.defaultLayout = defaultLayout;\n        this.paging = paging;\n        this.section = section;\n        this.layout = layout;\n        this.data = data;\n}\n\nfunction Section ( sectionName, separator ) {\n        this.sectionName = sectionName;\n        this.separator = separator;\n}\n\nfunction Layout ( insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing ) {\n        this.insets = insets;\n        this.visibleCellsWidthS = visibleCellsWidthS;\n        this.visibleCellsWidthM = visibleCellsWidthM;\n        this.visibleCellsWidthL = visibleCellsWidthL;\n        this.visibleCellsHeight = visibleCellsHeight;\n        this.heightForVisibleCells = heightForVisibleCells;\n        this.cellSize = cellSize;\n        this.ratio = ratio;\n        this.constant = constant;\n        this.horizontalSpacing = horizontalSpacing;\n        this.verticalSpacing = verticalSpacing;\n}\n\nfunction Insets ( top, bottom, left, right ) {\n        this.top = top;\n        this.bottom = bottom;\n        this.left = left;\n        this.right = right;\n}\n\nfunction Size ( width, height ) {\n        this.width = width;\n        this.height = height;\n}\n\nfunction Ratio ( inRelation, number1, number2 ) {\n        this.inRelation = inRelation;\n        this.number1 = number1;\n        this.number2 = number2;\n}\n\nfunction Data ( image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView ) {\n        this.image = image;\n        this.title = title;\n        this.description = description;\n        this.field1 = field1;\n        this.field2 = field2;\n        this.field3 = field3;\n        this.field4 = field4;\n        this.isChapter = isChapter;\n        this.link = link;\n        this.openInWebView = openInWebView;\n}\n\nfunction quickData ( link, image, title, field1 ) {\n        return new Data( image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link );\n}\n\nfunction shuffle ( a ) {\n        var j, x, i;\n        for ( i = a.length - 1; i > 0; i-- ) {\n                j = Math.floor( Math.random( ) * ( i + 1 ) );\n                x = a[ i ];\n                a[ i ] = a[ j ];\n                a[ j ] = x;\n        }\n        return a;\n}\nvar savedData = document.getElementById( 'ketsu-final-data' );\nvar parsedJson = JSON.parse( savedData.innerHTML );\nlet output = [ ];\nlet featured = [ ];\nlet topAnime = [ ];\nlet recent = [ ];\nlet emptyKeyValue = [ new KeyValue( '', '' ) ];\nconst slides = document.querySelectorAll( '.hotest .swiper-wrapper > .swiper-slide.item' );\nfor ( const slide of slides ) {\n        let image = slide.querySelector( '.image div' ).style.backgroundImage;\n        image = image.match( /\"(.+?)\"/ )[ 1 ];\n        image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n        const title = slide.querySelector( '.title.d-title' ).textContent;\n        let link = slide.querySelector( '.actions a' ).href;\n        link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n        const desc = slide.querySelector( '.synopsis' ).textContent.trim( );\n        const obj = new Data( image, title, 'unknown', title, desc, 'unknown', 'unknown', false, link, false );\n        featured.push( obj );\n}\nconst tops = document.querySelectorAll( '#top-anime > .body > .tab-content[data-name=month] > .scaff.side.items > a' );\nfor ( const top of tops ) {\n        let image = '';\n        image = top.querySelector( 'img' ).src;\n        image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n        let link = top.href;\n        link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n        const title = top.querySelector( 'img' ).alt;\n        const obj = new Data( image, title, 'unknown', 'unknown', 'unknown', 'unknown', 'unknown', false, link, false );\n        topAnime.push( obj );\n}\nconst animeList = document.querySelectorAll( '#recent-update > .body > .ani.items > .item' );\nfor ( const anime of animeList ) {\n        const title = anime.querySelector( '.ani.poster a img' ).alt;\n        let link = anime.querySelector( 'a' ).href;\n        link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n        var type = anime.querySelector( '.right' ).textContent.trim( );\n        var ep = 'Episode ' + anime.querySelector( '.ep-status' ).textContent.trim( );\n        if ( type.includes( 'SPECIAL' ) ) {\n                ep = '';\n        }\n        let image = anime.querySelector( '.ani.poster a img' ).src;\n        image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n        const obj = new Data( image, title, 'unknown', ep, type, 'unknown', 'unknown', false, link, false );\n        recent.push( obj );\n}\nvar topLayout = new Layout( new Insets( 0, 0, 0, 0 ), 1, 1, 1, 1, 0, new Size( 400, 105 ), new Ratio( 'width', 8, 14 ), new Size( 0, 0 ), 0, 0 );\noutput.push( new Output( CellDesings.Special3, Orientation.horizontal, DefaultLayouts.none, Paging.centered, new Section( '', false ), topLayout, shuffle( featured ) ) );\noutput.push( new Output( CellDesings.Special1, Orientation.horizontal, DefaultLayouts.triplets, Paging.leading, new Section( 'Top Anime', true ), null, topAnime ) );\noutput.push( new Output( CellDesings.normal1, Orientation.vertical, DefaultLayouts.longTripletsDouble, Paging.leading, new Section( 'Recently Updated', true ), null, recent ) );\nlet MainPageObject = new MainPage( new ModuleRequest( '', 'get', emptyKeyValue, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), new JavascriptConfig( true, false, '' ), output );\nvar finalJson = JSON.stringify( MainPageObject );\nsavedData.innerHTML = finalJson;\n    /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "",
                    "method": "",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdnxaFFstpkYJBCbJOBZWZ": {
            "path": "AIrMq",
            "id": "mainPage,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 0
        }
    }],
    "search": [{
        "request": {
            "url": "https://9anime.gs/filter?keyword=<searched>&page=<page>",
            "method": "get",
            "headers": [{
                "key": "Referer",
                "value": "https://9anime.id/home",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "separator": "+",
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": true,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         const DefaultLayouts = {\n        ultraWideFull: 'ultraWideFull',\n        ultraWide: 'ultraWide',\n        wideFull: 'wideFull',\n        wide: 'wide',\n        wideStrechedFull: 'wideStrechedFull',\n        wideStrechedFullDouble: 'WideStrechedFullDouble',\n        wideStreched: 'wideStreched',\n        wideStrechedDouble: 'wideStrechedDouble',\n        wideStrechedFullList: 'wideStrechedFullList',\n        wideStrechedList: 'wideStrechedList',\n        doublets: 'doublets',\n        doubletsDouble: 'doubletsDouble',\n        doubletsFull: 'doubletsFull',\n        doubletsFullDouble: 'doubletsFullDouble',\n        doubletsConstant: 'doubletsConstant',\n        doubletsDoubleConstant: 'doubletsDoubleConstant',\n        doubletsFullConstant: 'doubletsFullConstant',\n        doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',\n        longDoublets: 'longDoublets',\n        longDoubletsDouble: 'longDoubletsDouble',\n        longDoubletsFull: 'longDoubletsFull',\n        longDoubletsFullDouble: 'longDoubletsFullDouble',\n        longDoubletsConstant: 'longDoubletsConstant',\n        longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',\n        longDoubletsFullConstant: 'longDoubletsFullConstant',\n        longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',\n        triplets: 'triplets',\n        tripletsDouble: 'tripletsDouble',\n        tripletsFull: 'tripletsFull',\n        tripletsFullDouble: 'tripletsFullDouble',\n        tripletsConstant: 'tripletsConstant',\n        tripletsDoubleConstant: 'tripletsDoubleConstant',\n        tripletsFullConstant: 'tripletsFullConstant',\n        tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',\n        longTriplets: 'longTriplets',\n        longTripletsDouble: 'longTripletsDouble',\n        longTripletsFull: 'longTripletsFull',\n        longTripletsFullDouble: 'longTripletsFullDouble',\n        longTripletsConstant: 'longTripletsConstant',\n        longTripletsDoubleConstant: 'longTripletsDoubleConstant',\n        longTripletsFullConstant: 'longTripletsFullConstant',\n        longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',\n        none: ''\n};\nconst CellDesings = {\n        Special1: 'Special1',\n        Special2: 'Special2',\n        Special3: 'Special3',\n        CELLHelperText: 'CELLHelperText',\n        small1: 'small1',\n        small2: 'small2',\n        normal1: 'normal1',\n        normal2: 'normal2',\n        normal3: 'normal3',\n        normal4: 'normal4',\n        normal5: 'normal5',\n        normal6: 'normal6',\n        normal7: 'normal7',\n        wide1: 'wide1',\n        wide2: 'wide2',\n        wide3: 'wide3',\n        wide4: 'wide4',\n        wide5: 'wide5',\n        wide6: 'wide6',\n        wide7: 'wide7',\n        wide8: 'wide8',\n        wide9: 'wide9',\n        wide10: 'wide10',\n        wide11: 'wide11'\n};\nconst Paging = {\n        leading: 'leading',\n        centered: 'centered',\n        none: ''\n};\nconst Orientation = {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n};\n\nfunction Search ( request, extra, separator, javascriptConfig, output ) {\n        this.request = request;\n        this.extra = extra;\n        this.separator = separator;\n        this.javascriptConfig = javascriptConfig;\n        this.output = output;\n}\n\nfunction ModuleRequest ( url, method, headers, httpBody ) {\n        this.url = url;\n        this.method = method;\n        this.headers = headers;\n        this.httpBody = httpBody;\n}\n\nfunction Extra ( commands, extraInfo ) {\n        this.commands = commands;\n        this.extraInfo = extraInfo;\n}\n\nfunction Commands ( commandName, params ) {\n        this.commandName = commandName;\n        this.params = params;\n}\n\nfunction JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n        this.removeJavascript = removeJavascript;\n        this.loadInWebView = loadInWebView;\n        this.javaScript = javaScript;\n}\n\nfunction KeyValue ( key, value ) {\n        this.key = key;\n        this.value = value;\n}\n\nfunction Output ( cellDesing, orientation, defaultLayout, paging, section, layout, data ) {\n        this.cellDesing = cellDesing;\n        this.orientation = orientation;\n        this.defaultLayout = defaultLayout;\n        this.paging = paging;\n        this.section = section;\n        this.layout = layout;\n        this.data = data;\n}\n\nfunction Section ( sectionName, separator ) {\n        this.sectionName = sectionName;\n        this.separator = separator;\n}\n\nfunction Layout ( insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing ) {\n        this.insets = insets;\n        this.visibleCellsWidthS = visibleCellsWidthS;\n        this.visibleCellsWidthM = visibleCellsWidthM;\n        this.visibleCellsWidthL = visibleCellsWidthL;\n        this.visibleCellsHeight = visibleCellsHeight;\n        this.heightForVisibleCells = heightForVisibleCells;\n        this.cellSize = cellSize;\n        this.ratio = ratio;\n        this.constant = constant;\n        this.horizontalSpacing = horizontalSpacing;\n        this.verticalSpacing = verticalSpacing;\n}\n\nfunction Insets ( top, bottom, left, right ) {\n        this.top = top;\n        this.bottom = bottom;\n        this.left = left;\n        this.right = right;\n}\n\nfunction Size ( width, height ) {\n        this.width = width;\n        this.height = height;\n}\n\nfunction Ratio ( inRelation, number1, number2 ) {\n        this.inRelation = inRelation;\n        this.number1 = number1;\n        this.number2 = number2;\n}\n\nfunction Data ( image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView ) {\n        this.image = image;\n        this.title = title;\n        this.description = description;\n        this.field1 = field1;\n        this.field2 = field2;\n        this.field3 = field3;\n        this.field4 = field4;\n        this.isChapter = isChapter;\n        this.link = link;\n        this.openInWebView = openInWebView;\n}\n\nfunction quickData ( link, image, title, field1 ) {\n        return new Data( image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link );\n}\n\nfunction shuffle ( a ) {\n        var j, x, i;\n        for ( i = a.length - 1; i > 0; i-- ) {\n                j = Math.floor( Math.random( ) * ( i + 1 ) );\n                x = a[ i ];\n                a[ i ] = a[ j ];\n                a[ j ] = x;\n        }\n        return a;\n}\nvar savedData = document.getElementById( 'ketsu-final-data' );\nvar parsedJson = JSON.parse( savedData.innerHTML );\nvar finalData = '';\n\nlet output = [ ];\nlet results = [ ];\nlet nextRequest = '';\nlet emptyKeyValue = [ new KeyValue( '', '' ) ];\nif(!parsedJson.request.url.includes('vrf')){\n  let search = window.location.href.split('keyword=')[1].split('&')[0];\n  let page = window.location.href.split('&page=')[1];\n  let input = document.querySelector(\"#search > form > input[type=text]:nth-child(2)\");\n  input.value = search;\n  const e = new Event(\"change\");\n  input.dispatchEvent(e);\n  let vrf = document.querySelector(\"#search > form > input[type=hidden]\").value;\n  nextRequest = `https://9anime.gs/filter?keyword=${search}&vrf=${vrf}&page=${page}`\n} else {\n  const animeList = document.querySelectorAll('.ani.items > .item');\n    for (const anime of animeList) {\n        const title = anime.querySelector('img').alt;\n        let link = anime.querySelector('.name').href;\n        link = new URL(link, window.location.href).href;\n        link = new ModuleRequest(link, 'get', emptyKeyValue, null);\n        let image = anime.querySelector('img').src;\n        image = new ModuleRequest(image, 'get', emptyKeyValue, null);\n        let lang = '';\n        let epiStatus = anime.querySelectorAll('.ep-status');\n        if (epiStatus.length == 3) {\n            lang = 'SUB/DUB';\n        } else if (epiStatus.length == 2) {\n            let array = [];\n            for (div of epiStatus) {\n                if (div.className.includes('sub')) {\n                    array.push('SUB');\n                } else if (div.className.includes('dub')) {\n                    array.push('DUB');\n                }\n            }\n            lang = array.join('/');\n        } else {\n            lang = 'SUB';\n        }\n        var total = '';\n        var type = anime.querySelector('.ani.poster.tip .meta .inner .right').textContent.trim();\n        try {\n            total = 'Episode ' + anime.querySelector('.ep-status.total').textContent.trim() + ' ';\n        } catch (error) {\n            total = '';\n            console.log(error);\n        }\n        const obj = new Data(image, title + ' ' + type, total + lang, '', '', 'unknown', 'unknown', false, link, false);\n        results.push(obj);\n    }\n    var testLayout = new Layout(new Insets(10, 10, 10, 10), 1, 2, 3, 1, 500, new Size(400, 400), new Ratio('width', 4, 11), new Size(0, 0), 10, 10);\n    output.push(new Output(CellDesings.wide8, Orientation.vertical, DefaultLayouts.none, Paging.none, new Section('', true), testLayout, results));\n}\n\nlet searchPageObject = new Search(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), '', new JavascriptConfig( true, true, '' ), output );\nvar finalJson = JSON.stringify( searchPageObject );\nsavedData.innerHTML = finalJson;    /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdfKQkZkEvMZHTYeCVCYkz": {
            "path": "wnbuF",
            "id": "search,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "openedMenu": "Javascript",
            "javascriptEditorScroll": 0,
            "openedRequestMenu": "Http Body"
        }
    }],
    "info": [{
        "request": {
            "url": "https://9anime.gs/watch/baka-and-test-summon-the-beasts.w14l/ep-1",
            "method": "get",
            "headers": [{
                "key": "Referer",
                "value": "https://9anime.gs/home",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": true,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */  function Info(request, extra, javascriptConfig, output) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest(url, method, headers, httpBody) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra(commands, extraInfo) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands(commandName, params) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Chapter(chapName, link, openInWebView) {\n    this.chapName = chapName;\n    this.link = link;\n    this.openInWebView = openInWebView;\n}\n\nfunction Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) {\n    this.image = image;\n    this.link = link;\n    this.title = title;\n    this.description = description;\n    this.genres = genres;\n    this.field1 = field1;\n    this.field2 = field2;\n    this.field3 = field3;\n    this.field4 = field4;\n    this.chapters = chapters;\n}\n\nfunction getStuff(array, match) {\n    for (var x = 0; x < array.length; x++) {\n        var data = array[x].innerText;\n        if (data.includes(match)) {\n            return data.replace(match, '').trim();\n        }\n    }\n}\n\nfunction getHtmlStuff(array, match) {\n    for (var x = 0; x < array.length; x++) {\n        var data = array[x].innerText;\n        if (data.includes(match)) {\n            return array[x];\n        }\n    }\n}\n\nasync function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar savedData = document.getElementById('ketsu-final-data');\nvar parsedJson = JSON.parse(savedData.innerText);\nvar emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)];\nvar commands = [new Commands('', emptyKeyValue)];\nvar newRequest = new ModuleRequest('', '', emptyKeyValue, null);\nconst info = document.querySelector('.info');\nconst metaArr = info.querySelectorAll('.bmeta > .meta > div');\nlet meta = {};\nfor (const m of metaArr) {\n    let re = m.textContent.split(':');\n    const key = re[0].trim().replace(' ', '-').toLowerCase();\n    const value = re[1].trim();\n    meta[key] = value;\n}\nvar episodes = [];\nvar type = meta.type ? meta.type : 'TV';\nvar status = meta.status ? meta.status : 'On Going';\nvar genres = meta.genre ? meta.genre.split(', ') : [];\nvar desc = '';\nvar title = info.querySelector('h1').textContent.trim();\nvar image = document.querySelector('.poster img').src;\nimage = new ModuleRequest(image, 'get', emptyKeyValue, null);\ndesc = document.querySelector('.synopsis.mb-3 .content').textContent.trim();\nvar KETSU_ASYNC = true;\nasync function doStuff() {\n    for (var x = 0; x < 13; x++) {\n        if (episodes.length >= 1) {\n            break;\n        } else {\n           await sleep(1000).then(() => {\n            let divEpisodes = document.querySelector(\"#w-episodes\");\n            var total = divEpisodes.querySelectorAll('li').length;\n            if (total != 0) {\n                let eps = divEpisodes.querySelectorAll('li');\n                for (let ep of eps) {\n                    let title = `Episode ${ep.querySelector('a').dataset.num}`;\n                    let link = ep.querySelector('a').href;\n                    let obj = new Chapter(title, new ModuleRequest(link, 'get', emptyKeyValue, null), false);\n                    episodes.push(obj);\n                }\n            }\n        });\n        }\n    }\n    var infoPageObject = new Info(new ModuleRequest('', 'get', emptyKeyValue, null), new Extra(commands, emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, status, 'Anime', type, 'Eps: ' + episodes.length, episodes));\n    var finalJson = JSON.stringify(infoPageObject);\n    savedData.innerHTML = finalJson;\n    window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n}\ndoStuff();  /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "image": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "link": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "title": "",
            "description": "",
            "genres": [""],
            "field1": "",
            "field2": "",
            "field3": "",
            "field4": "",
            "chapters": [{
                "chapName": "",
                "openInWebView": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        },
        "moduleCreatorIdMAnnOxNshlIwSOyBTTGo": {
            "path": "ORhBi",
            "id": "info,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 2034.4444580078125,
            "openedMenu": "Javascript",
            "async": false
        }
    }],
    "chapters": [{
        "request": {
            "url": "https://9anime.gs/watch/baka-and-test-summon-the-beasts.w14l/ep-1",
            "method": "get",
            "headers": [{
                "key": "key",
                "value": "value",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": true,
            "javaScript": "\n        try {\n\n             \n\n        var KETSU_ASYNC = true;\n        \n        /* JAVASCRIPT STARTS */  function Chapters(request, extra, javascriptConfig, output) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest(url, method, headers, httpBody) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra(commands, extraInfo) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands(commandName, params) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output(videos, images, text) {\n    this.videos = videos;\n    this.images = images;\n    this.text = text;\n}\n\nfunction Videos(needsResolver, rawVideo) {\n    this.needsResolver = needsResolver;\n    this.rawVideo = rawVideo;\n}\n\nfunction NeedsResolver(resolverIdentifier, link) {\n    this.resolverIdentifier = resolverIdentifier;\n    this.link = link;\n}\n\nfunction RawVideo(video) {\n    this.video = video;\n}\n\nfunction Video(videoQuality, videoLink) {\n    this.videoQuality = videoQuality;\n    this.videoLink = videoLink;\n}\n\nfunction getValueFromKey(keys, key) {\n    for (var x = 0; x < keys.length; x++) {\n        let tKey = keys[x];\n        if (tKey.key == key) {\n            return tKey.value;\n        }\n    }\n}\nasync function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nvar savedData = document.getElementById('ketsu-final-data');\nvar parsedJson = JSON.parse(savedData.innerHTML);\nvar extraInfo = parsedJson.extra.extraInfo;\nlet nextRequest = '';\nvar emptyKeyValue = [new KeyValue('Referer', 'https://9anime.gs/watch/')];\nvar KETSU_ASYNC = true;\nvar output = [];\n\n\n\nasync function getVideos() {\n    for (let x = 0; x < 100; x++) {\n        if (output.length >= 1) {\n            break\n        } else {\n            await sleep(1000).then(async () => {\n                let divProv = document.querySelectorAll(\"#w-servers > div.servers .type li\");\n                if (divProv.length >= 1) {\n                    for (let prov of divProv) {\n                        prov.dispatchEvent(new Event('click'));\n                      await sleep(2500).then(async ()=> {\n                        for (let i = 0; i < 100; i++) {\n                            let iframe = document.querySelector('iframe');\n                            if (iframe.src != undefined) {\n                                await sleep(2500).then(() => {\n                                    let link = document.querySelector('iframe').src;\n                                    output.push(new NeedsResolver('', new ModuleRequest(link, 'get', emptyKeyValue, null)));\n                                })\n                                break;\n                            }\n                        }\n                      })\n                    }\n                }\n            })\n        }\n    }\n    let emptyExtra = new Extra([new Commands('', emptyKeyValue)], extraInfo);\n    var chaptersObject = new Chapters(new ModuleRequest('', 'get', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(new Videos(output, null), null, null));\n    var finalJson = JSON.stringify(chaptersObject);\n    savedData.innerHTML = finalJson;\n    window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n}\ngetVideos();  /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "videos": {
                "needsResolver": [{
                    "resolverIdentifier": "",
                    "link": {
                        "url": "",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }],
                "rawVideo": [{
                    "video": [{
                        "videoQuality": "",
                        "videoLink": {
                            "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                            "method": "get",
                            "headers": [{
                                "key": "key",
                                "value": "value"
                            }],
                            "httpBody": null
                        }
                    }]
                }]
            },
            "images": [{
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value"
                }],
                "httpBody": null
            }],
            "text": {
                "text": ""
            }
        },
        "moduleCreatorIdwRfnOgZUqEYZYLgAVfwq": {
            "path": "QujnJ",
            "id": "chapters,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 1634.4444580078125,
            "openedMenu": "Javascript",
            "async": true
        }
    }],
    "moduleResolvers": [{
        "resolverInfo": {
            "resolverName": "VIZSTREAM",
            "nameMatches": ["MCLOUD"],
            "developer": "ナビル",
            "moduleID": "q3RuUt2jwX9",
            "resolverVersion": 1,
            "baseURL": "",
            "moduleCreatorIdowXMPkabFDkuXIqRimuR": {
                "path": "qvIfj",
                "id": "moduleResolvers,0,resolverInfosection",
                "sectionsHidden": [],
                "options": {
                    "name": "Resolver Parameters",
                    "listName": "parameters"
                },
                "cellsHidden": false
            },
            "moduleCreatorIdrLUQiSxtaOPhRyOcjxkK": {
                "path": "cdEVG",
                "id": "moduleResolvers,0,resolverInfocell",
                "sectionsHidden": [],
                "options": {
                    "name": "parameters"
                },
                "cellsHidden": false
            }
        },
        "resolver": [{
            "request": {
                "url": "https://mcloud.to/e/l24k8q",
                "method": "get",
                "headers": [{
                    "key": "Referer",
                    "value": "https://mcloud.to/",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */ function Resolver(request, extra, javascriptConfig, output) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest(url, method, headers, httpBody) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra(commands, extraInfo) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands(commandName, params) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output(video) {\n    this.video = video;\n}\n\nfunction Video(videoQuality, videoLink) {\n    this.videoQuality = videoQuality;\n    this.videoLink = videoLink;\n}\n\nfunction getNext(match, array) {\n    for (var x = 0; x < array.length; x++) {\n        let mMatch = array[x];\n        if (mMatch.includes(match)) {\n            return array[x + 1];\n        }\n    }\n}\nvar savedData = document.getElementById('ketsu-final-data');\nvar parsedJson = JSON.parse(savedData.innerHTML);\nvar emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)];\nvar videos = [];\nlet nextRequest =  parsedJson.request.url + '?dev.';\n\nlet emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue);\nvar chaptersObject = new Resolver(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), emptyExtra,\n    new JavascriptConfig(false, true, ''), new Output(videos));\nvar finalJson = JSON.stringify(chaptersObject);\nsavedData.innerHTML = finalJson; /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "",
                "video": [{
                    "videoQuality": "720",
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIdGGzCyICBSlBBZVQaKndu": {
                "path": "KwINr",
                "id": "moduleResolvers,0,resolver,0cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "openedMenu": "Javascript",
                "javascriptEditorScroll": 722.2222290039062
            }
        }, {
            "request": {
                "url": "https://mcloud.to/e/l24k8q?dev.",
                "method": "get",
                "headers": [{
                    "key": "Referer",
                    "value": "https://mcloud.to/",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": false,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */  function Resolver(request, extra, javascriptConfig, output) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest(url, method, headers, httpBody) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra(commands, extraInfo) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands(commandName, params) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output(video) {\n    this.video = video;\n}\n\nfunction Video(videoQuality, videoLink) {\n    this.videoQuality = videoQuality;\n    this.videoLink = videoLink;\n}\n\nfunction getNext(match, array) {\n    for (var x = 0; x < array.length; x++) {\n        let mMatch = array[x];\n        if (mMatch.includes(match)) {\n            return array[x + 1];\n        }\n    }\n}\nvar savedData = document.getElementById('ketsu-final-data');\nvar parsedJson = JSON.parse(savedData.innerHTML);\nvar emptyKeyValue = [new KeyValue('Referer', 'https://mcloud.to/')];\nvar videos = [];\n\nlet found = false;\n\nlet oldXHROpen = window.XMLHttpRequest.prototype.open;\nwindow.XMLHttpRequest.prototype.open = function(method, url, async, user, password)\n{\n    this.addEventListener('load', function()\n    {\n        let response = this.response;\n        if (response == undefined || found)\n        {\n            return\n        }\n\n        if (response.includes('sources'))\n        {\n            found = true;\n            let parsed = JSON.parse(response)\n            for (let source of parsed.data.media.sources)\n            {\n                videos.push(new Video('Normal', new ModuleRequest(source.file, 'get', emptyKeyValue, null)));\n\n            }\n\n            let emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue);\n            var chaptersObject = new Resolver(new ModuleRequest('', '', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, true, ''), new Output(videos));\n            var finalJson = JSON.stringify(chaptersObject);\n            savedData.innerHTML = finalJson;\n            window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n        }\n    });\n    return oldXHROpen.apply(this, arguments);\n}\n\nlet foundS = '';\nfor (let script of document.querySelectorAll('script'))\n{\n    if (script.src.includes('/assets/mcloud/cache/'))\n    {\n        foundS = script.src;\n        console.log(foundS)\n        break;\n    }\n}\n\nlet script = document.createElement('script');\nscript.src = foundS\ndocument.body.appendChild(script) /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "",
                "video": [{
                    "videoQuality": "720",
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIdlFJnkKFCeUNOzSQROKhl": {
                "path": "jwTqS",
                "id": "moduleResolvers,0,resolver,1cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "openedMenu": "Javascript",
                "javascriptEditorScroll": 0
            }
        }],
        "moduleCreatorIdaNWAZusZrfhHQPZgKcGK": {
            "path": "nydyx",
            "id": "moduleResolvers,0section",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdGWgvWzrwYiBHfubtEmdG": {
            "path": "resolver",
            "id": "moduleResolvers,0,resolversection",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver Request",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }, {
        "resolverInfo": {
            "resolverName": "Filemoon",
            "nameMatches": ["FILEMOON"],
            "developer": "ナビル",
            "moduleID": "2446065035610",
            "resolverVersion": 1,
            "baseURL": "",
            "moduleCreatorIdYmCjrFBZxHShXBdSfGlO": {
                "path": "PwMTx",
                "id": "moduleResolvers,1,resolverInfosection",
                "sectionsHidden": [],
                "options": {
                    "name": "Resolver Parameters",
                    "listName": "parameters"
                },
                "cellsHidden": false
            },
            "moduleCreatorIdqNTmPIXGJLntZCqvYcIc": {
                "path": "IcIsr",
                "id": "moduleResolvers,1,resolverInfocell",
                "sectionsHidden": [],
                "options": {
                    "name": "parameters"
                },
                "cellsHidden": false
            }
        },
        "resolver": [{
            "request": {
                "url": "https://filemoon.sx/e/z4t8jpv72ha4?autostart=true",
                "method": "get",
                "headers": [{
                    "key": "User-Agent",
                    "value": "Mozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": false,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */  function Resolver(request, extra, javascriptConfig, output) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest(url, method, headers, httpBody) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra(commands, extraInfo) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands(commandName, params) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output(video) {\n    this.video = video;\n}\n\nfunction Video(videoQuality, videoLink) {\n    this.videoQuality = videoQuality;\n    this.videoLink = videoLink;\n}\n\nfunction getNext(match, array) {\n    for (var x = 0; x < array.length; x++) {\n        let mMatch = array[x];\n        if (mMatch.includes(match)) {\n            return array[x + 1];\n        }\n    }\n}\nvar savedData = document.getElementById('ketsu-final-data');\nvar parsedJson = JSON.parse(savedData.innerHTML);\nvar emptyKeyValue = [new KeyValue('Referer', 'https://filemoon.to/'),\n    new KeyValue('User-Agent', 'Mozilla/5.0 (platform; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion'),\n];\n\nvar videos = [];\nvar src = '';\nlet scripts = document.querySelectorAll('script');\nlet found = '';\nfor (let script of scripts) {\n    if (script.innerHTML.includes('p,a,c,k,e,d')) {\n        found = script.innerHTML;\n        break;\n    }\n}\n\nlet regex = /eval(?<eval>.+)\\)/g;\nlet regRes = regex.exec(found).groups.eval + ')';\nconsole.log(regRes)\nlet data = eval(regRes);\nconsole.log(data);\n\nregex = /player\\.setup\\((?<sources>.+?)\\)/g;\nregRes = regex.exec(data).groups.sources;\nconsole.log(regRes)\neval(\"var parsed = \" + regRes)\nconsole.log(parsed)\n\nfor (let source of parsed.sources) {\n    console.log(source.file)\n    videos.push(new Video('Auto', new ModuleRequest(source.file, 'get', emptyKeyValue, null)));\n}\n\nlet emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue);\nvar chaptersObject = new Resolver(new ModuleRequest('', '', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(videos));\nvar finalJson = JSON.stringify(chaptersObject);\nsavedData.innerHTML = finalJson;  /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "",
                "video": [{
                    "videoQuality": "720",
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIdxhAGLuMFHwsXBtYFIdtN": {
                "path": "lTaZj",
                "id": "moduleResolvers,1,resolver,0cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "openedMenu": "Javascript",
                "javascriptEditorScroll": 0
            }
        }],
        "moduleCreatorIdwFlFXLiweQQvwQFUCRPO": {
            "path": "RDWeJ",
            "id": "moduleResolvers,1section",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdeqFepfQgiOGSrkqtWowT": {
            "path": "resolver",
            "id": "moduleResolvers,1,resolversection",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver Request",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "responseCodeFunctions": [{
        "code": 401,
        "msgTitle": "9Anime's Challenge Detected",
        "msgBody": "Please wait until the website loads, then close it using the 'Done' button.",
        "type": "normal",
        "functions": [{
            "request": {
                "url": "https://9anime.ru",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": false,
                "loadInWebView": true,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */    function sleep(ms) { var start = new Date().getTime(), expire = start + ms; while (new Date().getTime() < expire) { } return;}sleep(3000);    /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "moduleCreatorIdYSJlrLwwRUkCTLWLqBWR": {
                "path": "RelIq",
                "id": "responseCodeFunctions,0,functions,0cell",
                "sectionsHidden": ["moduleCreatorIdjqoXSQEbojrxYYsDKDSW"],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false
            }
        }],
        "moduleCreatorIdxrNmQMxgQdxjhTElrndO": {
            "path": "DRRlc",
            "id": "responseCodeFunctions,0section",
            "sectionsHidden": ["moduleCreatorIdjqoXSQEbojrxYYsDKDSW"],
            "options": {
                "name": "Function"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdBZfDNhEtWRYWcDQqZapg": {
            "path": "yGZry",
            "id": "responseCodeFunctions,0,section",
            "sectionsHidden": ["moduleCreatorIdjqoXSQEbojrxYYsDKDSW"],
            "options": {
                "name": "Function Parameters",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdHeVzIsSHfuKVBiPrvxGt": {
            "path": "gJXAQ",
            "id": "responseCodeFunctions,0,cell",
            "sectionsHidden": ["moduleCreatorIdjqoXSQEbojrxYYsDKDSW"],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdCrHhQYaySFXYSdIzrwaN": {
            "path": "functions",
            "id": "responseCodeFunctions,0,functionssection",
            "sectionsHidden": ["moduleCreatorIdjqoXSQEbojrxYYsDKDSW"],
            "options": {
                "name": "Function Requests",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "helperFunctions": [{
        "functionName": "example",
        "msgTitle": "Search Query",
        "msgBody": "Please click on okay and do the search query on the popup window, when you're finished you can click on done. (Don't click on the animes)",
        "type": "captcha",
        "functions": [{
            "request": {
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value"
                }],
                "httpBody": null
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */    function Info(request, extra, javascriptConfig) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}const savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);let emptyKeyValue = [new KeyValue('', '')];const eps = document.querySelector('#body > div:nth-child(2) > aside.main > section > div').innerHTML;const data = encodeURIComponent(eps.replace(/\\r?\\n|\\r/g, ''));const commands = [ new Commands('variable', [ new KeyValue('data', data), new KeyValue('current', parsedJson.request.url) ])];const infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra(commands, emptyKeyValue), new JavascriptConfig(false, false, ''));const finalJson = JSON.stringify(infoPageObject);savedData.innerHTML = finalJson;    /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "moduleCreatorIdqWNhSLGJbmiNzcTeSkwp": {
                "path": "oxbyT",
                "id": "helperFunctions,0,functions,0cell",
                "sectionsHidden": ["moduleCreatorIdounsSNHjhusmapZhNeQj"],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false
            }
        }],
        "moduleCreatorIdxkPHzPbnbDZusbFAVgcM": {
            "path": "bHakD",
            "id": "helperFunctions,0section",
            "sectionsHidden": ["moduleCreatorIdounsSNHjhusmapZhNeQj"],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdTKNpxhugsHmhTMySTyOS": {
            "path": "lhWJr",
            "id": "helperFunctions,0,section",
            "sectionsHidden": ["moduleCreatorIdounsSNHjhusmapZhNeQj"],
            "options": {
                "name": "Function Parameters",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdEIlHGWppKZFUknkZDkMD": {
            "path": "zbTDp",
            "id": "helperFunctions,0,cell",
            "sectionsHidden": ["moduleCreatorIdounsSNHjhusmapZhNeQj"],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdosOFJDByeaeNSjIctQDi": {
            "path": "functions",
            "id": "helperFunctions,0,functionssection",
            "sectionsHidden": ["moduleCreatorIdounsSNHjhusmapZhNeQj"],
            "options": {
                "name": "Function Requests",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "moduleCreatorGlobalOptions": {
        "selected": "moduleCreatorIdGGzCyICBSlBBZVQaKndu",
        "notes": {},
        "hideViews": [],
        "id": "CnbQVkzMrJvMsYI",
        "projectName": "New Project"
    },
    "moduleCreatorIdbdRNBMRoyEkGlKbKRgoX": {
        "path": "mainPage",
        "id": "mainPagesection",
        "sectionsHidden": [],
        "options": {
            "name": "Main Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdyyvKckvhZuqEHEmnTJei": {
        "path": "search",
        "id": "searchsection",
        "sectionsHidden": [],
        "options": {
            "name": "Search Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdEXsTYABKkpkCOPUPcQCe": {
        "path": "info",
        "id": "infosection",
        "sectionsHidden": [],
        "options": {
            "name": "Info Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIduPiXLiZvtBWUEXWhtyMN": {
        "path": "chapters",
        "id": "chapterssection",
        "sectionsHidden": [],
        "options": {
            "name": "Chapters",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdmlWvqoyDNNpZHNhMjsTN": {
        "path": "moduleResolvers",
        "id": "moduleResolverssection",
        "sectionsHidden": [],
        "options": {
            "name": "Resolvers",
            "listName": "Resolver"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdjqoXSQEbojrxYYsDKDSW": {
        "path": "responseCodeFunctions",
        "id": "responseCodeFunctionssection",
        "sectionsHidden": [],
        "options": {
            "name": "Response Code Funtions",
            "listName": "Function"
        },
        "cellsHidden": true
    },
    "moduleCreatorIdounsSNHjhusmapZhNeQj": {
        "path": "helperFunctions",
        "id": "helperFunctionssection",
        "sectionsHidden": [],
        "options": {
            "name": "Helper Functions",
            "listName": "Request"
        },
        "cellsHidden": true
    }
}