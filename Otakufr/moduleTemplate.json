{
  "moduleInfo": {
    "moduleName": "OtakuFR",
    "moduleInitials": "OT",
    "moduleDesc": "Un module qui permet de regarder des en VF et en Vostfr",
    "developer": "ナビル",
    "moduleID": "6156521323655645",
    "moduleImage": "https://i.postimg.cc/2j9g6m8d/otakufr.png",
    "moduleVersion": 1.04,
    "moduleLenguage": "FR",
    "moduleType": "Video",
    "baseURL": "https://otakufr.co/",
    "moduleDeveloperSite": "https://bilnaa.github.io/main/",
    "UpdateSite": "https://raw.githubusercontent.com/Bilnaa/bilnaa.github.io/main/Otakufr/moduleTemplate.json",
    "preferedServer": "VIDEO",
    "preferedDownloadServer": "VIDEO",
    "blackListed": [
      ""
    ]
  },
  "global": {
    "variables": [{
      "key": "",
      "value": ""
    }],
    "cookies": [{
      "key": "",
      "value": ""
    }],
    "headers": [{
      "key": "",
      "value": ""
    }]
  },
  "mainPage": [{
    "request": {
      "url": "https://otakufr.co/",
      "method": "get",
      "headers": [{
        "key": "",
        "value": ""
      }],
      "httpBody": null
    },
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": "const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: ''};const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11'};const Paging = { leading: 'leading', centered: 'centered', none: ''};const Orientation = { horizontal: 'horizontal', vertical: 'vertical'};function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right;}function Size(width, height) { this.width = width; this.height = height;}function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}function quickData(link, image, title, field1) { return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link);}function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let emptyKeyValue = [new KeyValue('', '')];let output = [];var last = [];var animes = [];var asks = document.querySelectorAll('.list-group .list-group-item.list-group-item-action');for (var i = 0; i < asks.length; i++) { var ask = asks[i]; var title = ask.querySelector('figure img').title; var link = ask.href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); var image = ask.querySelector('figure > img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); var status = ask.querySelector('.episode-name').textContent.replace('Statut :', '').trim(); var finalData = new Data(image, title, '', '', status, 'unknown3', 'unknown4', false, link); animes.push(finalData);}var lastepisodes = document.querySelectorAll('.col-md-8.order-1 .episode');for (epi of lastepisodes) { var title = epi.querySelector('figure img').title; var link = epi.querySelector('a').href; link = new ModuleRequest(link.replace('episode', 'anime').replace(/-[0-9]+.+/gm, ''), 'get', emptyKeyValue, null); var image = epi.querySelector('figure > a > img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); var langue = epi.querySelector('div.h6 > span').textContent; var ep = title.match(/[0-9]+.+./gm)[0]; title = title.replace(ep, ''); var finalData = new Data(image, title, '', ep, langue, 'unknown2', 'unknown3', false, link); last.push(finalData);}const dummyQuest = new ModuleRequest('https://otakufr.co', 'get', emptyKeyValue, null);const infoText = new Data(dummyQuest, 'Si l\\'épisode vous amène vers rien, le module n\\'a pas pu avoir le bon lien. Faites une recherche de votre anime pour pouvoir le regarder.', '', '', '', '', '', false, dummyQuest, false);let layout1 = new Layout(new Insets(0, 0, 10, 10), 1, 1, 1, 1, 0, new Size(400, 105), new Ratio('width', 4, 10), new Size(0, 0), 0, 0);output.push(new Output(CellDesings.wide6, Orientation.horizontal, DefaultLayouts.wide, Paging.leading, new Section('Dernières ajouts ', true), null, animes));output.push(new Output('CELLHelperText', Orientation.horizontal, DefaultLayouts.wideFull, Paging.centered, new Section('', true), layout1, [infoText]));output.push(new Output(CellDesings.normal2, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section('Derniers Épisodes', true), null, last));let MainPageObject = new MainPage(new ModuleRequest('https://otakufr.co/film/', 'get', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(MainPageObject);savedData.innerHTML = finalJson;"
    },
    "output": [{
      "cellDesing": "normal1",
      "orientation": "vertical",
      "defaultLayout": "wide",
      "paging": "",
      "section": {
        "sectionName": "",
        "separator": false
      },
      "layout": {
        "insets": {
          "top": 0,
          "bottom": 0,
          "left": 0,
          "right": 0
        },
        "visibleCellsWidthS": 2,
        "visibleCellsWidthM": 2,
        "visibleCellsWidthL": 2,
        "visibleCellsHeight": 2,
        "heightForVisibleCells": 400,
        "cellSize": {
          "width": 300,
          "height": 300
        },
        "ratio": {
          "inRelation": "width",
          "number1": 1,
          "number2": 2
        },
        "constant": {
          "width": 1,
          "height": 2
        },
        "horizontalSpacing": 0,
        "verticalSpacing": 0
      },
      "data": [{
        "image": {
          "url": "",
          "method": "get",
          "headers": [{
            "key": "",
            "value": ""
          }],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "openInWebView": false,
        "isChapter": false,
        "link": {
          "url": "",
          "method": "",
          "headers": [{
            "key": "",
            "value": ""
          }],
          "httpBody": null
        }
      }]
    }]
  },
  {
    "request": {
      "url": "https://otakufr.co/film/",
      "method": "get",
      "headers": [{
        "key": "",
        "value": ""
      }],
      "httpBody": null
    },
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": "const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: '' }; const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11' }; const Paging = { leading: 'leading', centered: 'centered', none: '' }; const Orientation = { horizontal: 'horizontal', vertical: 'vertical' }; function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName, params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key, value) { this.key = key; this.value = value; } function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data; } function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator; } function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing; } function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right; } function Size(width, height) { this.width = width; this.height = height; } function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2; } function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView; } function quickData(link, image, title, field1) { return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link); } function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a; } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); let emptyKeyValue = [new KeyValue('', '')]; let output = parsedJson.output; var film = document.querySelectorAll('.card.my-3'); var nouv = []; for (fi of film) { var title = fi.querySelector('.m-0 >a >img').title; var link = fi.querySelector('a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); var image = fi.querySelector('.m-0 >a >img').src; var image = new ModuleRequest(image, 'get', emptyKeyValue, null); var desc = fi.querySelector('.except p').textContent.replace('Synopsis: ', ''); var finalData = new Data(image, title, desc, 'Film', '', 'Film', 'Film', false, link); nouv.push(finalData); } output.push(new Output(CellDesings.wide11, Orientation.horizontal, DefaultLayouts.wideFull, Paging.leading, new Section('Films', true), null, nouv)); let MainPageObject = new MainPage(new ModuleRequest('', 'get', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(true, false, ''), output); var finalJson = JSON.stringify(MainPageObject); savedData.innerHTML = finalJson;"
    },
    "output": [{
      "cellDesing": "normal1",
      "orientation": "vertical",
      "defaultLayout": "wide",
      "paging": "",
      "section": {
        "sectionName": "",
        "separator": false
      },
      "layout": {
        "insets": {
          "top": 0,
          "bottom": 0,
          "left": 0,
          "right": 0
        },
        "visibleCellsWidthS": 2,
        "visibleCellsWidthM": 2,
        "visibleCellsWidthL": 2,
        "visibleCellsHeight": 2,
        "heightForVisibleCells": 400,
        "cellSize": {
          "width": 300,
          "height": 300
        },
        "ratio": {
          "inRelation": "width",
          "number1": 1,
          "number2": 2
        },
        "constant": {
          "width": 1,
          "height": 2
        },
        "horizontalSpacing": 0,
        "verticalSpacing": 0
      },
      "data": [{
        "image": {
          "url": "",
          "method": "get",
          "headers": [{
            "key": "",
            "value": ""
          }],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "openInWebView": false,
        "isChapter": false,
        "link": {
          "url": "",
          "method": "",
          "headers": [{
            "key": "",
            "value": ""
          }],
          "httpBody": null
        }
      }]
    }]
  }],
  "search": [{
    "request": {
      "url": "https://otakufr.co/toute-la-liste-affiches/page/<page>/?q=<searched>",
      "method": "get",
      "headers": [{
        "key": "",
        "value": ""
      }],
      "httpBody": null
    },
    "separator": "+",
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": "const DefaultLayouts = {ultraWideFull: 'ultraWideFull',ultraWide: 'ultraWide',wideFull: 'wideFull',wide: 'wide',wideStrechedFull: 'wideStrechedFull',wideStrechedFullDouble: 'WideStrechedFullDouble',wideStreched: 'wideStreched',wideStrechedDouble: 'wideStrechedDouble',wideStrechedFullList: 'wideStrechedFullList',wideStrechedList: 'wideStrechedList',doublets: 'doublets',doubletsDouble: 'doubletsDouble',doubletsFull: 'doubletsFull',doubletsFullDouble: 'doubletsFullDouble',doubletsConstant: 'doubletsConstant',doubletsDoubleConstant: 'doubletsDoubleConstant',doubletsFullConstant: 'doubletsFullConstant',doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',longDoublets: 'longDoublets',longDoubletsDouble: 'longDoubletsDouble',longDoubletsFull: 'longDoubletsFull',longDoubletsFullDouble: 'longDoubletsFullDouble',longDoubletsConstant: 'longDoubletsConstant',longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',longDoubletsFullConstant: 'longDoubletsFullConstant',longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',triplets: 'triplets',tripletsDouble: 'tripletsDouble',tripletsFull: 'tripletsFull',tripletsFullDouble: 'tripletsFullDouble',tripletsConstant: 'tripletsConstant',tripletsDoubleConstant: 'tripletsDoubleConstant',tripletsFullConstant: 'tripletsFullConstant',tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',longTriplets: 'longTriplets',longTripletsDouble: 'longTripletsDouble',longTripletsFull: 'longTripletsFull',longTripletsFullDouble: 'longTripletsFullDouble',longTripletsConstant: 'longTripletsConstant',longTripletsDoubleConstant: 'longTripletsDoubleConstant',longTripletsFullConstant: 'longTripletsFullConstant',longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',none: ''};const CellDesings = {Special1: 'Special1',Special2: 'Special2',Special3: 'Special3',CELLHelperText: 'CELLHelperText',small1: 'small1',small2: 'small2',normal1: 'normal1',normal2: 'normal2',normal3: 'normal3',normal4: 'normal4',normal5: 'normal5',normal6: 'normal6',normal7: 'normal7',wide1: 'wide1',wide2: 'wide2',wide3: 'wide3',wide4: 'wide4',wide5: 'wide5',wide6: 'wide6',wide7: 'wide7',wide8: 'wide8',wide9: 'wide9',wide10: 'wide10',wide11: 'wide11'};const Paging = {leading: 'leading',centered: 'centered',none: ''};const Orientation = {horizontal: 'horizontal',vertical: 'vertical'};function Search(request, extra, separator, javascriptConfig, output) {this.request = request;this.extra = extra;this.separator = separator;this.javascriptConfig = javascriptConfig;this.output = output;}function ModuleRequest(url, method, headers, httpBody) {this.url = url;this.method = method;this.headers = headers;this.httpBody = httpBody;}function Extra(commands, extraInfo) {this.commands = commands;this.extraInfo = extraInfo;}function Commands(commandName, params) {this.commandName = commandName;this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) {this.removeJavascript = removeJavascript;this.loadInWebView = loadInWebView;this.javaScript = javaScript;}function KeyValue(key, value) {this.key = key;this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) {this.cellDesing = cellDesing;this.orientation = orientation;this.defaultLayout = defaultLayout;this.paging = paging;this.section = section;this.layout = layout;this.data = data;}function Section(sectionName, separator) {this.sectionName = sectionName;this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) {this.insets = insets;this.visibleCellsWidthS = visibleCellsWidthS;this.visibleCellsWidthM = visibleCellsWidthM;this.visibleCellsWidthL = visibleCellsWidthL;this.visibleCellsHeight = visibleCellsHeight;this.heightForVisibleCells = heightForVisibleCells;this.cellSize = cellSize;this.ratio = ratio;this.constant = constant;this.horizontalSpacing = horizontalSpacing;this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) {this.top = top;this.bottom = bottom;this.left = left;this.right = right;}function Size(width, height) {this.width = width;this.height = height;}function Ratio(inRelation, number1, number2) {this.inRelation = inRelation;this.number1 = number1;this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) {this.image = image;this.title = title;this.description = description;this.field1 = field1;this.field2 = field2;this.field3 = field3;this.field4 = field4;this.isChapter = isChapter;this.link = link;this.openInWebView = openInWebView;}function quickData(link, image, title, field1) {return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link);}function shuffle(a) {var j, x, i;for(i = a.length - 1; i > 0; i--) {j = Math.floor(Math.random() * (i + 1));x = a[i];a[i] = a[j];a[j] = x;}return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let output = [];let emptyKeyValue = [new KeyValue('', '')];var lastAdded = document.querySelectorAll('div.col-md-8.order-1 > div > article');let lastAddedArray = [];for(var x = 0; x < lastAdded.length; x++) {let list = lastAdded[x];let title = list.querySelector('img').title;var link = list.querySelector('div.action a').href;var image = list.querySelector('img').src;var desc = list.querySelector('.except p').textContent.replaceAll('Synopsis: ', '');link = new ModuleRequest(link, 'get', emptyKeyValue, null);image = new ModuleRequest(image, 'get', emptyKeyValue, null);if(title.includes('VF')) {var field2 = 'VF';} else {var field2 = 'VOSTFR';};var finalData = new Data(image, title, desc, '', field2, 'unknown', 'unknown', false, link);;lastAddedArray.push(finalData);}var testLayout = new Layout(new Insets(10, 10, 10, 10), 1, 2, 3, 1, 500, new Size(400, 400), new Ratio('width', 4, 11), new Size(0, 0), 10, 10);output.push(new Output(CellDesings.wide11, Orientation.vertical, DefaultLayouts.none, Paging.none, new Section('', false), testLayout, lastAddedArray));;let searchPageObject = new Search(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), '', new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(searchPageObject);savedData.innerHTML = finalJson;"
    },
    "output": [{
      "cellDesing": "normal1",
      "orientation": "vertical",
      "defaultLayout": "wide",
      "paging": "",
      "section": {
        "sectionName": "",
        "separator": false
      },
      "layout": {
        "insets": {
          "top": 0,
          "bottom": 0,
          "left": 0,
          "right": 0
        },
        "visibleCellsWidthS": 2,
        "visibleCellsWidthM": 2,
        "visibleCellsWidthL": 2,
        "visibleCellsHeight": 2,
        "heightForVisibleCells": 400,
        "cellSize": {
          "width": 300,
          "height": 300
        },
        "ratio": {
          "inRelation": "width",
          "number1": 1,
          "number2": 2
        },
        "constant": {
          "width": 1,
          "height": 2
        },
        "horizontalSpacing": 0,
        "verticalSpacing": 0
      },
      "data": [{
        "image": {
          "url": "",
          "method": "get",
          "headers": [{
            "key": "",
            "value": ""
          }],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "openInWebView": false,
        "isChapter": false,
        "link": {
          "url": "empty",
          "method": "get",
          "headers": [{
            "key": "key",
            "value": "value"
          }],
          "httpBody": null
        }
      }]
    }]
  }],
  "info": [{
    "request": {
      "url": "",
      "method": "get",
      "headers": [{
        "key": "",
        "value": ""
      }],
      "httpBody": null
    },
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": "function Info(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName, params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key, value) { this.key = key; this.value = value; } function Chapter(chapName, link, openInWebView) { this.chapName = chapName; this.link = link; this.openInWebView = openInWebView; } function Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) { this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.chapters = chapters; } function getStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return data.replace(match, '').trim(); } } } function getHtmlStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return array[x]; } } } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); let emptyKeyValue = [new KeyValue('', '')]; var episodes = []; var type = 'empty'; var status = 'Unknown'; var genres = Array.from(document.querySelectorAll('ul > li:nth-child(5) > ul li a')).map(g => g.textContent .trim()); var otherinfos = document.querySelectorAll('.list-unstyled li'); for (var i = 0; i < otherinfos.length; i++) { let data = otherinfos[i].innerText; if (data.includes('Type:')) { type = data.replace('Type:', '').trim(); } else if (data.includes('Studio d\\'animation:')) { studio = data.replace('Studio d\\'animation:', '').trim(); } else if (data.includes('Statut:')) { status = data.replace('Statut:', '').trim(); } } var desc = ''; var synopsysdiv = document.querySelectorAll('.episode.fz-sm.synop p'); for (var x = 1; x < synopsysdiv.length; x++) { desc = desc + synopsysdiv[x].innerText; } var descdiv=document.querySelector('div.depion'); if (descdiv){ desc=descdiv.innerText;}var title = document.querySelector('figure > img').title; var image = document.querySelector('figure > img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); var genresArray = []; var chapters = document.querySelectorAll('div.float-right > a'); for (var i = chapters.length - 1; i >= 0; i--) { var element = chapters[i]; var fixedLink = element.href; var episodeName = element.innerText.split('\\n')[0]; let chapter = new Chapter('Épisode' + episodeName.replace(title, ''), new ModuleRequest(fixedLink, 'get', emptyKeyValue, null), false); episodes.push(chapter); } let infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, status, studio, type, 'Eps: ' + episodes.length, episodes)); var finalJson = JSON.stringify(infoPageObject); savedData.innerHTML = finalJson;"
    },
    "output": {
      "image": {
        "url": "",
        "method": "get",
        "headers": [{
          "key": "",
          "value": ""
        }],
        "httpBody": null
      },
      "link": {
        "url": "",
        "method": "get",
        "headers": [{
          "key": "",
          "value": ""
        }],
        "httpBody": null
      },
      "title": "",
      "description": "",
      "genres": [
        ""
      ],
      "field1": "",
      "field2": "",
      "field3": "",
      "field4": "",
      "chapters": [{
        "chapName": "",
        "openInWebView": false,
        "link": {
          "url": "empty",
          "method": "get",
          "headers": [{
            "key": "key",
            "value": "value"
          }],
          "httpBody": null
        }
      }]
    }
  }],
  "chapters": [{
    "request": {
      "url": "",
      "method": "get",
      "headers": [{
        "key": "key",
        "value": "value"
      }],
      "httpBody": null
    },
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": " function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(videos, images, text) { this.videos = videos; this.images = images; this.text = text;}function Videos(needsResolver, rawVideo) { this.needsResolver = needsResolver; this.rawVideo = rawVideo;}function NeedsResolver(resolverIdentifier, link) { this.resolverIdentifier = resolverIdentifier; this.link = link;}function RawVideo(video) { this.video = video;}function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink;}function Text(text) { this.text = text;}var output = [];var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var nextRequest = '';var extraInfo = parsedJson.extra.extraInfo;var videos = new Videos([], []);var extraInfo = [new KeyValue('count', '0')];var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url), new KeyValue('X-Requested-With', 'XMLHttpRequest')];var links = document.querySelectorAll('iframe');for (var x = 0; x < links.length; x++) { var link = links[x]; if (link.src.includes('parisanime.com')) { var url = 'https:' + link.src; if (x == 0) { nextRequest = url; } else { extraInfo.push(new KeyValue(`${x}`, `${url}`)); } console.log(url); } else{ if(link.src.includes('https:')) { output.push(new NeedsResolver('', new ModuleRequest(link.src, 'get', emptyKeyValue, null))); videos = new Videos(output, []); } }}if (extraInfo.length >= 2) { nextRequest = extraInfo[1].value;}let emptyExtra = new Extra([new Commands('', emptyKeyValue)], extraInfo);var chaptersObject = new Chapters(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, true, ''), new Output(videos, null, null));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
    },
    "output": {
      "videos": {
        "needsResolver": [{
          "resolverIdentifier": "",
          "link": {
            "url": "",
            "method": "get",
            "headers": [{
              "key": "key",
              "value": "value"
            }],
            "httpBody": null
          }
        }],
        "rawVideo": [{
          "video": [{
            "videoQuality": "",
            "videoLink": {
              "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
              "method": "get",
              "headers": [{
                "key": "key",
                "value": "value"
              }],
              "httpBody": null
            }
          }]
        }]
      },
      "images": [{
        "url": "empty",
        "method": "get",
        "headers": [{
          "key": "key",
          "value": "value"
        }],
        "httpBody": null
      }],
      "text": {
        "text": ""
      }
    }
  },{
    "request": {
      "url": "",
      "method": "get",
      "headers": [{
        "key": "key",
        "value": "value"
      }],
      "httpBody": null
    },
    "extra": {
      "commands": [{
        "commandName": "",
        "params": [{
          "key": "",
          "value": ""
        }]
      }],
      "extraInfo": [{
        "key": "",
        "value": ""
      }]
    },
    "javascriptConfig": {
      "removeJavascript": true,
      "loadInWebView": false,
      "javaScript": "function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(videos, images, text) { this.videos = videos; this.images = images; this.text = text;}function Videos(needsResolver, rawVideo) { this.needsResolver = needsResolver; this.rawVideo = rawVideo;}function NeedsResolver(resolverIdentifier, link) { this.resolverIdentifier = resolverIdentifier; this.link = link;}function RawVideo(video) { this.video = video;}function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink;}function getValueFromKey(keys, key) { for (var x = 0; x < keys.length; x++) { let tKey = keys[x]; if (tKey.key == key) { return tKey.value; } }}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var extraInfo = parsedJson.extra.extraInfo;var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url), new KeyValue('X-Requested-With', 'XMLHttpRequest')];var output = parsedJson.output.videos;var actualCount = getValueFromKey(extraInfo, 'count');var nextCount = parseInt(actualCount.match(/\\d+/g)[0]) + 1;var nextRequest = getValueFromKey(extraInfo, nextCount);if (!(actualCount == 0 && output.length >= 1)) { output = new Videos([], []);}var videoLink = document.querySelector('.ui.embed').getAttribute('data-url');if(videoLink.includes('https')){ output.needsResolver.push(new NeedsResolver('', new ModuleRequest(videoLink, 'get', emptyKeyValue, null)));} else { output.needsResolver.push(new NeedsResolver('', new ModuleRequest('https:'+videoLink, 'get', emptyKeyValue, null)));}extraInfo[0].value = '' + (nextCount);if (nextRequest == undefined) { nextRequest = '';}let emptyExtra = new Extra([new Commands('', emptyKeyValue)], extraInfo);var chaptersObject = new Chapters(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, true, ''), new Output(output, null, null));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
    },
    "output": {
      "videos": {
        "needsResolver": [{
          "resolverIdentifier": "",
          "link": {
            "url": "",
            "method": "get",
            "headers": [{
              "key": "key",
              "value": "value"
            }],
            "httpBody": null
          }
        }],
        "rawVideo": [{
          "video": [{
            "videoQuality": "",
            "videoLink": {
              "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
              "method": "get",
              "headers": [{
                "key": "key",
                "value": "value"
              }],
              "httpBody": null
            }
          }]
        }]
      },
      "images": [{
        "url": "empty",
        "method": "get",
        "headers": [{
          "key": "key",
          "value": "value"
        }],
        "httpBody": null
      }],
      "text": {
        "text": ""
      }
    }
  }],
  "moduleResolvers": [{
    "resolverInfo": {
      "resolverName": "",
      "nameMatches": [
        ""
      ],
      "developer": "",
      "moduleID": "",
      "resolverVersion": 1,
      "baseURL": ""
    },
    "resolver": [{
      "request": {
        "url": "",
        "method": "get",
        "headers": [{
          "key": "key",
          "value": "value"
        }],
        "httpBody": null
      },
      "extra": {
        "commands": [{
          "commandName": "",
          "params": [{
            "key": "",
            "value": ""
          }]
        }],
        "extraInfo": [{
          "key": "",
          "value": ""
        }]
      },
      "javascriptConfig": {
        "removeJavascript": false,
        "loadInWebView": false,
        "javaScript": ""
      },
      "output": {
        "moduleID": "",
        "video": [{
          "videoQuality": "720",
          "videoLink": {
            "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
            "method": "get",
            "headers": [{
              "key": "key",
              "value": "value"
            }],
            "httpBody": null
          }
        }]
      }
    }]
  }],
  "responseCodeFunctions": [{
    "code": 0,
    "msgTitle": "",
    "msgBody": "",
    "type": "normal",
    "functions": [{
      "request": {
        "url": "empty",
        "method": "get",
        "headers": [{
          "key": "key",
          "value": "value"
        }],
        "httpBody": null
      },
      "extra": {
        "commands": [{
          "commandName": "",
          "params": [{
            "key": "",
            "value": ""
          }]
        }],
        "extraInfo": [{
          "key": "",
          "value": ""
        }]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": ""
      }
    }]
  }],
  "helperFunctions": [{
    "functionName": "example",
    "msgTitle": "",
    "msgBody": "",
    "type": "normal",
    "functions": [{
      "request": {
        "url": "empty",
        "method": "get",
        "headers": [{
          "key": "key",
          "value": "value"
        }],
        "httpBody": null
      },
      "extra": {
        "commands": [{
          "commandName": "",
          "params": [{
            "key": "",
            "value": ""
          }]
        }],
        "extraInfo": [{
          "key": "",
          "value": ""
        }]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": ""
      }
    }]
  }]
}
